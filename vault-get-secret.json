{
  "Id": "3e40f501-d20f-425c-947b-c5352310794a",
  "Name": "Read Vault Secrets",
  "Description": "This step reads a secret or several secrets from Hashicorp Vault and makes them available as an Output Variable to subsequent step. Please read more at https://github.com/andrewsav-datacom/vault-octopus",
  "ActionType": "Octopus.Script",
  "Version": 1,
  "CommunityActionTemplateId": null,
  "Packages": [],
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptBody": "Import-Module CredentialManager\nfunction Get-Hash {\nparam(\n    [string]$s\n)\n    $utf8 = new-object Text.UTF8Encoding\n    [byte[]]$bytes = $utf8.GetBytes($s)\n    $ms = [io.memorystream]$bytes\n    return (Get-FileHash -InputStream $ms).Hash.Substring(0,8)\n}\n\nfunction Split-SecretPath {\nparam(\n    [string]$path\n)\n    $tokens = @($path -split \":\" | Foreach-Object { $_.Trim() })\n    if ($tokens.Length -gt 2) {\n        \"$path contains more that one ':'. Check 'Paths to secret' parameter\" | Write-Error\n        exit -1\n    }\n    if ($tokens.Length -eq 2) {\n        $explicit = $true\n        $label = $tokens[0]\n        $value = $tokens[1]\n    }\n    if ($tokens.Length -eq 1) {\n        $explicit = $false\n        $label = Get-Hash $tokens[0]\n        $value = $tokens[0]\n    }\n    return \"{'label': '$label', 'path': '$value', 'explicit': '$explicit'}\" | ConvertFrom-Json\n}\n\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n\n\"Vault Url: #{vaultUrl}\" | Write-Host\nif (\"#{token}\" -ne \"##{token}\") {\n    \"Using supplied Vault Token\" | Write-Host\n    $vault_token = \"#{token}\"\n} else {\n    if (\"#{useCredentialManger}\" -eq \"True\") {\n       \"Getting Role Id and Secret Id from Windows Credential Manager\" | Write-Host\n        $vault_role_id = (Get-StoredCredential -Target \"#{roleId}\" -AsCredentialObject).Password\n        $vault_secret_id = (Get-StoredCredential -Target \"#{secretId}\" -AsCredentialObject).Password\n    } else {\n        $vault_role_id = \"#{roleId}\"\n        $vault_secret_id = \"#{secretId}\"\n    }\n    $payload = \"{`\"role_id`\":`\"$vault_role_id`\",`\"secret_id`\":`\"$vault_secret_id`\"}\"\n    \"Obtaining token with AppRole\" | Write-Host\n    $res = Invoke-WebRequest -Body $payload  \"#{vaultUrl}/v1/auth/approle/login\" -Method post -UseBasicParsing\n    $vault_token = ($res.Content | ConvertFrom-Json).auth.client_token\n}\n\n$path = @(\"#{path}\" -split \"`n\" | Foreach-Object { $_.Trim() })\n$res = $path | Foreach-Object {\n\tif (![string]::IsNullOrWhiteSpace($current)) {\n    \t$current = Split-SecretPath $_\n    \t\"Obtaining secret from $($current.path)\" | Write-Host\n    \t$secret = ((Invoke-WebRequest -Headers @{\"X-Vault-Token\"=\"$vault_token\"}  \"#{vaultUrl}/v1/$($current.path)\" -Method get -UseBasicParsing).Content | ConvertFrom-Json).data\n    \t$secret.psobject.properties | Foreach-Object {\n        \t\"{'label': '$($current.label)', 'explicit': '$($current.explicit)', 'name': '$($_.Name)', 'value': '$($_.value)'}\" | ConvertFrom-Json   \n        }\n    }\n}\n\nif (\"#{token}\" -ne \"##{token}\") {\n    if (\"#{renew}\" -eq \"True\") {\n       \"Renewing token\" | Write-Host\n        Invoke-WebRequest -Headers @{\"X-Vault-Token\"=\"$vault_token\"} \"#{vaultUrl}/v1/auth/token/renew-self\" -Method post -UseBasicParsing | Out-Null\n    }\n} else {\n   \"Revoking token\" | Write-Host\n    Invoke-WebRequest -Headers @{\"X-Vault-Token\"=\"$vault_token\"} \"#{vaultUrl}/v1/auth/token/revoke-self\" -Method post -UseBasicParsing | Out-Null\n}\n\n$sensitiveOutputVariablesSupported = ((Get-Command 'Set-OctopusVariable').Parameters.GetEnumerator() | Where-Object { $_.key -eq \"Sensitive\" }) -ne $null\nif (-not $sensitiveOutputVariablesSupported -and !(\"#{notsensitive}\" -eq \"True\")) {\n    Write-Warning \"Values from vault will be added to the Octopus deployment pipeline as normal values. Please upgrade to Octopus 2018.5.2 or newer so the values from your vault can be added as sensitive values.\"\n}\n \n$res | Foreach-Object {\n    if (\"#{resultName}\" -ne \"##{resultName}\") {\n        $prefix = \"#{resultName}.\"\n    } else {\n        $prefix = \"\"\n    }\n    \n    if (($path.Length -eq 1) -and ($_.explicit -eq \"False\")) {\n        $label = \"\"\n    } else {\n        $label = \"$($_.label).\"\n    }\n    \n    $name = $prefix + $label + $_.name\n\n    \"Writing ##{Octopus.Action[#{Octopus.Step.Name}].Output.$name}\" | Write-Host\n    if ($sensitiveOutputVariablesSupported -and !(\"#{notsensitive}\" -eq \"True\")) {\n        Set-OctopusVariable -name $name -value $_.value -sensitive\n    } else {\n        Set-OctopusVariable -name $name -value $_.value\n    }\n}\n"
  },
  "Parameters": [
    {
      "Id": "62923c60-7837-42ea-b8c8-8b562a41fd5a",
      "Name": "vaultUrl",
      "Label": "Vault URL",
      "HelpText": "Your Vault Server access URL, e.g.: https://vault:8200",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "20a68169-a028-4774-a04d-1acc6ebe58ec",
      "Name": "path",
      "Label": "Paths to secret",
      "HelpText": "Paths to secret you would like to retrieve in Vault, one per line. E.g.: `secret/path/to/my/secret`. You can optionally give a label to a path, e.g.: `mylabel:secret/path/to/my/secret` this label will be used as a part of output variable results are written to.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": "193b8f98-1fc7-4efb-a352-e4fcccca6e74",
      "Name": "roleId",
      "Label": "Role Id",
      "HelpText": "If Vault Token is specified it will be used for authentication with token authentication backend in Vault and Roled Id and Secret Id will be ignored. Otherwise Role Id and Secret Id will be used to for authentication with AppRole authentication backend in Vault.\n\nIf Use Windows Credential Manager is unchecked, then specify Vault Role Id. Otherwise specify the name under which the Vault Role Id is stored in Windows Credential Manager on the machine where this step runs. See step template documentation for more details.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "5be05115-5d7d-4c70-b27f-73ce91c756e3",
      "Name": "secretId",
      "Label": "Secret Id",
      "HelpText": "See above.\n\nIf Use Windows Credential Manager is unchecked, then specify Vault Secret Id, corresponding to the Role Id above. Otherwise specify the name under which the Vault Secret Id is stored in Windows Credential Manager on the machine where this step runs. See step template documentation for more details.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "6512fcde-6f49-4987-bc9e-f2daabd70b11",
      "Name": "token",
      "Label": "Vault Token",
      "HelpText": "If Vault Token is specified it will be used for authentication with token authentication backend in Vault and Roled Id and Secret Id will be ignored. Otherwise Role Id and Secret Id will be used to for authentication with AppRole authentication backend in Vault.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "b49dba9d-c9a9-452f-8e47-da37d4fc6a6e",
      "Name": "useCredentialManger",
      "Label": "Use Windows Credential Manager",
      "HelpText": "If unchecked Role Id and Secret Id specify respective Vault Role Id and Secret Id. Otherwise they specify the names under which said Role Id and Secreted Id stored in Windows Credential Manager on the machine running this step. Ignored if Vault Token is specified.",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": "9586f823-5698-413c-99ee-eb6ce1f65427",
      "Name": "renew",
      "Label": "Renew Token",
      "HelpText": "Calls Vault self-renew operation on the token before steps finishes. Ignored if Vault Token is not specified.",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": "c56b3b0f-ab7f-48a3-9923-c296587910a9",
      "Name": "notsensitive",
      "Label": "Don't Use Sensitive Output Variables",
      "HelpText": "By default output variables are written as sensitive. Check this to prevent it. Check this to prevent the warning if your version of Octopus Deploy does not support Sensitive Output Variables",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": "760d38fe-fdd9-4dd4-99a3-709a7b61430f",
      "Name": "resultName",
      "Label": "Output Variable Prefix",
      "HelpText": "Optional prefix for the Output Variable. Useful if several \"Read Vault Secrets\" steps in the same process clash, producing same Output Variables. Especially useful in a scenario where the same step is running for several deployment targets.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "$Meta": {
    "ExportedAt": "2018-12-06T02:29:31.899Z",
    "OctopusVersion": "2018.9.0",
    "Type": "ActionTemplate"
  }
}
